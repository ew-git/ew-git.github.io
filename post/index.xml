<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Evan Wright</title>
    <link>/post/</link>
    <description>Recent content in Posts on Evan Wright</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Jun 2020 12:00:00 -0500</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Julia PoissonFE.jl Package</title>
      <link>/2020/06/02/julia-poissonfe.jl-package/</link>
      <pubDate>Tue, 02 Jun 2020 12:00:00 -0500</pubDate>
      
      <guid>/2020/06/02/julia-poissonfe.jl-package/</guid>
      <description>I‚Äôve released a Julia package, PoissonFE.jl, to estimate Poisson regression with fixed effects.Similar to my R package, poisFErobust, it computes robust standard errors from Wooldridge (1999).
The Julia package is quite a bit faster than R.Aside from the raw speed improvement of Julia, it implements the likelihood function without the fixed effects parameters, so it should be faster than GLM.jl for models with many fixed effect levels (thousands).</description>
    </item>
    
    <item>
      <title>Some R-related gists</title>
      <link>/2019/03/05/some-r-related-gists/</link>
      <pubDate>Tue, 05 Mar 2019 12:00:00 -0500</pubDate>
      
      <guid>/2019/03/05/some-r-related-gists/</guid>
      <description>Here are some miscellaneous gists related to R. Click through to Github for additional explanation.
pdf-merge-text.rA common problem when scanning using a one-sided scanner with a document feeder is ending up with two PDFs: one for the front of each page and one for the back. This script writes LaTeX which combines those two PDFs, so that you end up with front1, back1, front2, back2, etc.
image-greyer.</description>
    </item>
    
    <item>
      <title>A key benefit of Julia</title>
      <link>/2019/01/15/a-key-benefit-of-julia/</link>
      <pubDate>Tue, 15 Jan 2019 12:00:00 -0500</pubDate>
      
      <guid>/2019/01/15/a-key-benefit-of-julia/</guid>
      <description>Notice: this post relies on Unicode characters which may not be included in the font(s) on your current platform, especially mobile. Therefore, you may see empty boxes or question marks for certain characters.
A key benefit of Julia is the ability to write code which looks similar to the mathematical representation of an algorithm, with simple and expressive syntax, while still being performant.Additionally, Julia accepts UTF-8 encoded Unicode characters as variable names, so if a paper defines some quantity,\(\boldsymbol{\mu}_i\), then essentially the same Unicode representation, ùõç·µ¢, could be used in the code.</description>
    </item>
    
    <item>
      <title>Robust standard errors for Poisson regression with fixed effects</title>
      <link>/2019/01/10/robust-standard-errors-for-poisson-regression-with-fixed-effects/</link>
      <pubDate>Thu, 10 Jan 2019 12:00:00 -0500</pubDate>
      
      <guid>/2019/01/10/robust-standard-errors-for-poisson-regression-with-fixed-effects/</guid>
      <description>Last year I released an R package, poisFErobust, which provides a function to compute standard errors for Poisson regression with fixed effects.The standard errors are derived in Wooldridge (1999) and are robust to conditional serial correlation of errors within groups.The function also returns the p-value of the hypothesis test of the conditional mean assumption (3.1) as described in the paper, Section 3.3.
The package is on CRAN, so it may be installed with</description>
    </item>
    
  </channel>
</rss>
