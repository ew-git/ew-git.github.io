<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Evan Wright</title>
    <link>/</link>
    <description>Recent content on Evan Wright</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scraping Discord pins</title>
      <link>/2023/02/01/scraping-discord-pins/</link>
      <pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/2023/02/01/scraping-discord-pins/</guid>
      <description>As more online communities move to Discord, it&amp;rsquo;s becoming increasingly difficult to find coherent information within those communities. Often, important findings and frequently asked questions are scattered in pinned messages throughout channels in the server. Discord search is not great, and navigating through pins is tiresome, so I wrote a hacky script to scrape all pinned messages in a server to a single Markdown file.
The script grabs the user&amp;rsquo;s authentication token from the browser to call Discord&amp;rsquo;s API.</description>
    </item>
    
    <item>
      <title>Solving Peg Solitaire with Julia</title>
      <link>/2022/06/18/solving-peg-solitaire-with-julia/</link>
      <pubDate>Sat, 18 Jun 2022 12:00:00 -0500</pubDate>
      
      <guid>/2022/06/18/solving-peg-solitaire-with-julia/</guid>
      <description>Peg solitaire is a singleplayer board game with the objective to remove all game pieces (pegs or marbles) except one from the board by ‚Äújumping‚Äù them with another peg.The 15-hole triangular variant is commonly found in Cracker Barrel restaurants in the US.We will solve this variant with Julia.
The triangular board is laid out as a hexagonal grid, so jumps can occur by moving northwest, northeast, east, southeast, southwest, or west.</description>
    </item>
    
    <item>
      <title>Derivation of the H-model dividend discount formula</title>
      <link>/2021/11/02/derivation-of-the-h-model-dividend-discount-formula/</link>
      <pubDate>Tue, 02 Nov 2021 12:00:00 -0500</pubDate>
      
      <guid>/2021/11/02/derivation-of-the-h-model-dividend-discount-formula/</guid>
      <description>IntroductionThe H-modelDerivationTwo-step approximationThe H-model formulaThree-step approximationApproximation errorTwo-stepThree-stepH-model versus ‚Äúexact‚Äù linear decline in growth rateWhy did I write this post?ReferencesIntroductionDividend discount models (DDM) provide a basic mechanism to value companies by discounting expected dividend cash flows back to the current period.Practitioners typically assume a series of dividend growth rates over a short horizon along with a constant terminal growth rate.</description>
    </item>
    
    <item>
      <title>Julia PoissonFE.jl Package</title>
      <link>/2020/06/02/julia-poissonfe.jl-package/</link>
      <pubDate>Tue, 02 Jun 2020 12:00:00 -0500</pubDate>
      
      <guid>/2020/06/02/julia-poissonfe.jl-package/</guid>
      <description>I‚Äôve released a Julia package, PoissonFE.jl, to estimate Poisson regression with fixed effects.Similar to my R package, poisFErobust, it computes robust standard errors from Wooldridge (1999).
The Julia package is quite a bit faster than R.Aside from the raw speed improvement of Julia, it implements the likelihood function without the fixed effects parameters, so it should be faster than GLM.jl for models with many fixed effect levels (thousands).</description>
    </item>
    
    <item>
      <title>Some R-related gists</title>
      <link>/2019/03/05/some-r-related-gists/</link>
      <pubDate>Tue, 05 Mar 2019 12:00:00 -0500</pubDate>
      
      <guid>/2019/03/05/some-r-related-gists/</guid>
      <description>Here are some miscellaneous gists related to R. Click through to Github for additional explanation.
pdf-merge-text.rA common problem when scanning using a one-sided scanner with a document feeder is ending up with two PDFs: one for the front of each page and one for the back. This script writes LaTeX which combines those two PDFs, so that you end up with front1, back1, front2, back2, etc.
image-greyer.</description>
    </item>
    
    <item>
      <title>A key benefit of Julia</title>
      <link>/2019/01/15/a-key-benefit-of-julia/</link>
      <pubDate>Tue, 15 Jan 2019 12:00:00 -0500</pubDate>
      
      <guid>/2019/01/15/a-key-benefit-of-julia/</guid>
      <description>Notice: this post relies on Unicode characters which may not be included in the font(s) on your current platform, especially mobile. Therefore, you may see empty boxes or question marks for certain characters.
A key benefit of Julia is the ability to write code which looks similar to the mathematical representation of an algorithm, with simple and expressive syntax, while still being performant.Additionally, Julia accepts UTF-8 encoded Unicode characters as variable names, so if a paper defines some quantity,\(\boldsymbol{\mu}_i\), then essentially the same Unicode representation, ùõç·µ¢, could be used in the code.</description>
    </item>
    
    <item>
      <title>Robust standard errors for Poisson regression with fixed effects</title>
      <link>/2019/01/10/robust-standard-errors-for-poisson-regression-with-fixed-effects/</link>
      <pubDate>Thu, 10 Jan 2019 12:00:00 -0500</pubDate>
      
      <guid>/2019/01/10/robust-standard-errors-for-poisson-regression-with-fixed-effects/</guid>
      <description>Last year I released an R package, poisFErobust, which provides a function to compute standard errors for Poisson regression with fixed effects.The standard errors are derived in Wooldridge (1999) and are robust to conditional serial correlation of errors within groups.The function also returns the p-value of the hypothesis test of the conditional mean assumption (3.1) as described in the paper, Section 3.3.
The package is on CRAN, so it may be installed with</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      
      <guid>/about/</guid>
      <description>This website contains some commentary on side projects. You can learn more about my professional work at linkedin.com/in/enwright. The posts are licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.
Projects  poisFErobust (R package) PoissonFE.jl (Julia package) node-waterrower (Node.js/Plotly interface to the Waterrower rowing machine)  Contact Email: enwright@umich.edu
GitHub: https://github.com/ew-git
Bitbucket: https://bitbucket.org/ew-btb/
LinkedIn: https://www.linkedin.com/in/enwright</description>
    </item>
    
  </channel>
</rss>
